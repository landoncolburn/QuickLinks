import { api } from "@/utils/api";
import type { NextPage } from "next";
import { useRouter } from "next/router";
import React from "react";
import Head from "next/head";
import LinkCard from "@/components/LinkCard";
import DashboardOptions from "@/components/DashboardOptions";
import QuickAction from "@/components/QuickAction";
import { CommandDialog } from "@/components/ui/command";
import { useHotkeys } from "react-hotkeys-hook";
import Link from "next/link";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { faArrowAltCircleLeft } from "@fortawesome/free-solid-svg-icons";
import Widget from "@/components/Widget";

const Dashboard: NextPage = () => {
  const router = useRouter();
  const dashboardId = router.query.id as string;

  const dashboard = api.dashboards.get.useQuery({ id: dashboardId });
  const cardsQuery = api.cards.getAll.useQuery({ id: dashboardId });
  const widgetsQuery = api.cards.getWidgets.useQuery({ id: dashboardId });
  const mutation = api.dashboards.update.useMutation();

  const [isQuickActionsOpen, setIsQuickActionsOpen] = React.useState(false);

  useHotkeys("mod+k", () => setIsQuickActionsOpen(true));

  async function onCardAdded(): Promise<void> {
    await cardsQuery.refetch();
  }

  async function onDashboardUpdate({
    title,
    description,
  }: {
    title: string;
    description?: string;
  }): Promise<void> {
    mutation.mutate({
      id: dashboardId,
      name: title,
      description,
    });
    await dashboard.refetch();
    router.reload();
  }

  return (
    <>
      <Head>
        <title>Dashboard - QuickLinks</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center">
        <div className="container flex flex-col items-center justify-center gap-8 px-4 py-16">
          <div className="w-full">
            <Link href="/">
              <FontAwesomeIcon icon={faArrowAltCircleLeft} className="mr-2" />
              All dashboards
            </Link>
            <h1 className="w-full text-4xl font-extrabold tracking-tight">
              QuickLinks
            </h1>
            <div className="flex flex-row items-start gap-2">
              <h2 className="text-2xl">{dashboard.data?.name}</h2>
              <DashboardOptions
                onCardAdded={onCardAdded}
                onDashboardUpdate={onDashboardUpdate}
                title={dashboard.data?.name ?? ""}
                description={dashboard.data?.description ?? ""}
                dashboard={dashboardId}
              />
            </div>
          </div>

          <div className="grid w-full auto-rows-[12rem] grid-cols-6 gap-16">
            {widgetsQuery.isLoading && <p>Loading...</p>}
            {widgetsQuery.isError && <p>Error</p>}
            {widgetsQuery.data?.map((widget, i) => (
              <Widget
                key={i}
                widget={{
                  name: widget.name,
                  description: widget.description || "",
                  size: widget.size as "small" | "medium" | "large",
                  url: widget.url,
                }}
              />
            ))}

            {cardsQuery.isLoading && <p>Loading...</p>}
            {cardsQuery.isError && <p>Error</p>}
            {cardsQuery.data?.map((card, i) => (
              <LinkCard key={i} card={card} />
            ))}

            {cardsQuery.data?.length === 0 &&
              widgetsQuery?.data?.length === 0 && (
                <div className="col-span-6 flex items-center justify-center">
                  <p className="text-center text-gray-500">
                    No links yet. Click the [...] button to add one.
                  </p>
                </div>
              )}
          </div>
        </div>
        <CommandDialog
          open={isQuickActionsOpen}
          onOpenChange={setIsQuickActionsOpen}
        >
          <QuickAction />
        </CommandDialog>
      </main>
    </>
  );
};

export default Dashboard;
